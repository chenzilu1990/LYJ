{
  "ver": "1.0.27",
  "uuid": "e16dedd3-492d-470b-b61e-06ed5b4ac860",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\n  attribute vec2 a_uv0;\n  varying vec2 v_uv0;\n#endif\n#if USE_TINT\n#endif\nvoid main () {\n    vec4 pos = vec4(a_position, 1);\n    #if CC_USE_MODEL\n      pos = cc_matViewProj * cc_matWorld * pos;\n    #else\n      pos = cc_matViewProj * pos;\n    #endif\n    #if USE_TEXTURE\n      v_uv0 = a_uv0;\n    #endif\n    v_color = a_color;\n    gl_Position = pos;\n}",
        "frag": "\n    precision highp float;\nuniform vec4 cc_time;\n    varying vec4 v_color;\n    #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n    #endif\n    uniform vec2 iResolution;\n    uniform sampler2D iChannel1;\n    uniform sampler2D iChannel2;\n      void main() {\n    vec2 u = gl_FragCoord.xy;\n    vec2 R = iResolution.xy,\n         U = u / R,\n         B =  - texture2D( iChannel2, v_uv0*70.0 - cc_time[0]*vec2(.02,.02) - texture2D( iChannel2, v_uv0 *70.0 - cc_time[0]*vec2(-0.1,0.1) ).xy/32. ).xy;\n    vec4 tex0 = texture2D(texture, v_uv0);\n    vec4 mask = texture2D(iChannel1, v_uv0);\n    vec4 river = texture2D(texture,  v_uv0*100.0 + B);\n    gl_FragColor = vec4(river.xyz, 1.0 - mask.x );\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\n  in vec2 a_uv0;\n  out vec2 v_uv0;\n#endif\n#if USE_TINT\n#endif\nvoid main () {\n    vec4 pos = vec4(a_position, 1);\n    #if CC_USE_MODEL\n      pos = cc_matViewProj * cc_matWorld * pos;\n    #else\n      pos = cc_matViewProj * pos;\n    #endif\n    #if USE_TEXTURE\n      v_uv0 = a_uv0;\n    #endif\n    v_color = a_color;\n    gl_Position = pos;\n}",
        "frag": "\n    precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n    in vec4 v_color;\n    #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n    #endif\n    uniform Uniforms {\n      vec4 iMouse;\n      vec2 iResolution;\n    };\n    uniform sampler2D iChannel1;\n    uniform sampler2D iChannel2;\n      void main() {\n    vec2 u = gl_FragCoord.xy;\n    vec2 R = iResolution.xy,\n         U = u / R,\n         B =  - texture2D( iChannel2, v_uv0*70.0 - cc_time[0]*vec2(.02,.02) - texture2D( iChannel2, v_uv0 *70.0 - cc_time[0]*vec2(-0.1,0.1) ).xy/32. ).xy;\n    vec4 tex0 = texture2D(texture, v_uv0);\n    vec4 mask = texture2D(iChannel1, v_uv0);\n    vec4 river = texture2D(texture,  v_uv0*100.0 + B);\n    gl_FragColor = vec4(river.xyz, 1.0 - mask.x );\n}"
      }
    }
  ],
  "subMetas": {}
}