/**
 * Date / 日期            : 20220628
 * Ref / 引用             : Unknown
 * Template / 模板        : v2::builtin-2d-sprite
 */

CCEffect %{
	  techniques: 
    - 
      passes: 
        - 
          vert: vs
          frag: fs
          blendState: 
            targets: 
              - 
                blend: true
          rasterizerState: 
            cullMode: none
          properties: 
            texture: 
              value: white
            iResolution: 
              value: 
                - 960
                - 640
            iMouse: 
              value: 
                - 0.5
                - 0.5
                - 0.5
                - 0.5
            iChannel1: 
              value: white
            iChannel2: 
              value: white

}%

CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>
    in vec3 a_position;
    in vec4 a_color;
    out vec4 v_color;
    #if USE_TEXTURE
    	in vec2 a_uv0;
    	out vec2 v_uv0;
    #endif
    #if USE_TINT
    #endif
    void main () {
      	vec4 pos = vec4(a_position, 1);
      	#if CC_USE_MODEL
      		pos = cc_matViewProj * cc_matWorld * pos;
      	#else
      		pos = cc_matViewProj * pos;
      	#endif
      	#if USE_TEXTURE
      		v_uv0 = a_uv0;
      	#endif
      	v_color = a_color;
      	gl_Position = pos;
    }
}%

CCProgram fs %{
	
    precision highp float;
    #include <cc-global>
    #include <texture>
    in vec4 v_color;
    #if USE_TEXTURE
    	in vec2 v_uv0;
    	uniform sampler2D texture;
    #endif
    uniform Uniforms {
	    vec4 iMouse;
	    vec2 iResolution;

    };
		uniform sampler2D iChannel1;
    uniform sampler2D iChannel2;

	#define round(number) (sign(number)*floor(abs(number)+0.5))
    void main() {
	  vec2 u = gl_FragCoord.xy;
    vec2 R = iResolution.xy,
         U = u / R,
         B =  - texture2D( iChannel2, v_uv0*70.0 - cc_time[0]*vec2(.02,.02) - texture2D( iChannel2, v_uv0 *70.0 - cc_time[0]*vec2(-0.1,0.1) ).xy/32. ).xy;
    vec4 tex0 = texture2D(texture, v_uv0);
    vec4 mask = texture2D(iChannel1, v_uv0);
    vec4 river = texture2D(texture,  v_uv0*100.0 + B);
    
    gl_FragColor = vec4(river.xyz, 1.0 - mask.x ); 
}
}%

